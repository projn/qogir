// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rps-service.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GrpcRequestMsgInfo struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	RequestBody          string   `protobuf:"bytes,2,opt,name=requestBody,proto3" json:"requestBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcRequestMsgInfo) Reset()         { *m = GrpcRequestMsgInfo{} }
func (m *GrpcRequestMsgInfo) String() string { return proto.CompactTextString(m) }
func (*GrpcRequestMsgInfo) ProtoMessage()    {}
func (*GrpcRequestMsgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aaf3bfb5eed2ecf, []int{0}
}

func (m *GrpcRequestMsgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcRequestMsgInfo.Unmarshal(m, b)
}
func (m *GrpcRequestMsgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcRequestMsgInfo.Marshal(b, m, deterministic)
}
func (m *GrpcRequestMsgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcRequestMsgInfo.Merge(m, src)
}
func (m *GrpcRequestMsgInfo) XXX_Size() int {
	return xxx_messageInfo_GrpcRequestMsgInfo.Size(m)
}
func (m *GrpcRequestMsgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcRequestMsgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcRequestMsgInfo proto.InternalMessageInfo

func (m *GrpcRequestMsgInfo) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GrpcRequestMsgInfo) GetRequestBody() string {
	if m != nil {
		return m.RequestBody
	}
	return ""
}

type GrpcResponseMsgInfo struct {
	ResponseBody         string   `protobuf:"bytes,1,opt,name=responseBody,proto3" json:"responseBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcResponseMsgInfo) Reset()         { *m = GrpcResponseMsgInfo{} }
func (m *GrpcResponseMsgInfo) String() string { return proto.CompactTextString(m) }
func (*GrpcResponseMsgInfo) ProtoMessage()    {}
func (*GrpcResponseMsgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aaf3bfb5eed2ecf, []int{1}
}

func (m *GrpcResponseMsgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcResponseMsgInfo.Unmarshal(m, b)
}
func (m *GrpcResponseMsgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcResponseMsgInfo.Marshal(b, m, deterministic)
}
func (m *GrpcResponseMsgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcResponseMsgInfo.Merge(m, src)
}
func (m *GrpcResponseMsgInfo) XXX_Size() int {
	return xxx_messageInfo_GrpcResponseMsgInfo.Size(m)
}
func (m *GrpcResponseMsgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcResponseMsgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcResponseMsgInfo proto.InternalMessageInfo

func (m *GrpcResponseMsgInfo) GetResponseBody() string {
	if m != nil {
		return m.ResponseBody
	}
	return ""
}

func init() {
	proto.RegisterType((*GrpcRequestMsgInfo)(nil), "rpc.GrpcRequestMsgInfo")
	proto.RegisterType((*GrpcResponseMsgInfo)(nil), "rpc.GrpcResponseMsgInfo")
}

func init() { proto.RegisterFile("rps-service.proto", fileDescriptor_6aaf3bfb5eed2ecf) }

var fileDescriptor_6aaf3bfb5eed2ecf = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x2a, 0x28, 0xd6,
	0x2d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e,
	0x2a, 0x48, 0x56, 0x8a, 0xe0, 0x12, 0x72, 0x2f, 0x2a, 0x48, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0xf1, 0x2d, 0x4e, 0xf7, 0xcc, 0x4b, 0xcb, 0x17, 0x52, 0xe0, 0xe2, 0x86, 0xaa, 0xf5, 0x4b,
	0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x16, 0x02, 0xa9, 0x28, 0x82, 0xe8,
	0x71, 0xca, 0x4f, 0xa9, 0x94, 0x60, 0x82, 0xa8, 0x40, 0x12, 0x52, 0xb2, 0xe4, 0x12, 0x86, 0x98,
	0x5c, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x0a, 0x33, 0x5a, 0x89, 0x8b, 0xa7, 0x08, 0x2a, 0x04, 0xd6,
	0x09, 0x31, 0x1b, 0x45, 0xcc, 0xc8, 0x97, 0x8b, 0x1b, 0xa4, 0x35, 0x18, 0x62, 0x9f, 0x90, 0x1d,
	0x17, 0x7b, 0x6a, 0x45, 0x6a, 0x72, 0x69, 0x49, 0xaa, 0x90, 0xb8, 0x5e, 0x51, 0x41, 0xb2, 0x1e,
	0xa6, 0x8b, 0xa5, 0x24, 0x90, 0x24, 0x50, 0x2c, 0x54, 0x62, 0x48, 0x62, 0x03, 0xfb, 0xd7, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x1e, 0x8f, 0x21, 0x04, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcServiceClient is the client API for GrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcServiceClient interface {
	Execute(ctx context.Context, in *GrpcRequestMsgInfo, opts ...grpc.CallOption) (*GrpcResponseMsgInfo, error)
}

type grpcServiceClient struct {
	cc *grpc.ClientConn
}

func NewGrpcServiceClient(cc *grpc.ClientConn) GrpcServiceClient {
	return &grpcServiceClient{cc}
}

func (c *grpcServiceClient) Execute(ctx context.Context, in *GrpcRequestMsgInfo, opts ...grpc.CallOption) (*GrpcResponseMsgInfo, error) {
	out := new(GrpcResponseMsgInfo)
	err := c.cc.Invoke(ctx, "/rpc.GrpcService/execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcServiceServer is the server API for GrpcService service.
type GrpcServiceServer interface {
	Execute(context.Context, *GrpcRequestMsgInfo) (*GrpcResponseMsgInfo, error)
}

// UnimplementedGrpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcServiceServer struct {
}

func (*UnimplementedGrpcServiceServer) Execute(ctx context.Context, req *GrpcRequestMsgInfo) (*GrpcResponseMsgInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Execute not implemented")
}

func RegisterGrpcServiceServer(s *grpc.Server, srv GrpcServiceServer) {
	s.RegisterService(&_GrpcService_serviceDesc, srv)
}

func _GrpcService_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcRequestMsgInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcServiceServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.GrpcService/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcServiceServer).Execute(ctx, req.(*GrpcRequestMsgInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.GrpcService",
	HandlerType: (*GrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "execute",
			Handler:    _GrpcService_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rps-service.proto",
}
